{"version":3,"sources":["images/smallCover.svg","images/createBG.svg","images/LoadingRe.gif","images/summaryBG.png","actions/authActions2.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/SongSummary.js","components/projects/SongList.js","components/dashboard/Dashboard.js","components/projects/SongDetail.js","actions/authActions.js","components/auth/SignIn.js","actions/authActions3.js","components/auth/SignUp.js","components/projects/CreateSongProject.js","actions/projectActions.js","App.js","serviceWorker.js","reducers/authReducers.js","reducers/projectReducers.js","reducers/rootReducers.js","config/fbConfig.js","index.js","images/abstractBG.svg","images/loginCover.svg"],"names":["module","exports","signout","fb","dispatch","getState","auth","signOut","then","type","withFirebase","connect","signOUT","props","className","to","onClick","firebase","profile","initials","SignedOutLinks","state","links","uid","src","smallCover","alt","title","Notifications","notifications","map","notif","key","id","notification","user","content","moment","time","toDate","fromNow","SongSummary","projectItem","artist","authorFirstName","authorLastName","createdAt","calendar","SongList","project","Dashboard","this","abstractBG","Component","compose","console","log","firestore","ordered","projects","firestoreConnect","collection","limit","orderBy","ownProps","match","params","projectDocs","data","signIN","credentials","signInWithEmailAndPassword","email","password","catch","err","SignIn","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","logInCover","onSubmit","htmlFor","onChange","required","creds","signup","newUser","createUserWithEmailAndPassword","resp","doc","set","firstName","fname","lastName","lname","SignUp","signUP","CreateSongProject","createProject","history","push","createBG","profileDetail","uidFirebase","add","authorID","Date","createNewPost","App","exact","path","component","SongDetail","Boolean","window","location","hostname","initState","authReducers","action","message","projectReducers","rootReducers","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","AuthIsReady","children","useSelector","isLoaded","CoffeeLoading","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.2b298272.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smallCover.78826381.svg\";","module.exports = __webpack_public_path__ + \"static/media/createBG.07287339.svg\";","module.exports = __webpack_public_path__ + \"static/media/LoadingRe.2f2afffe.gif\";","module.exports = __webpack_public_path__ + \"static/media/summaryBG.aa22c65d.png\";","const signout = (fb) =>{\r\n    return(dispatch,getState)=>{\r\n        fb.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport default signout;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport signout from '../../actions/authActions2';\r\nimport { connect } from 'react-redux';\r\nimport { withFirebase } from 'react-redux-firebase';\r\n\r\nconst SignedInLinks = (props) =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Post</NavLink></li>\r\n            <li><a onClick={()=>{props.signOUT(props.firebase)}}>Log Out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating btn-large white profile\">\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        signOUT:(fb)=>dispatch(signout(fb))\r\n    }\r\n}\r\n\r\nexport default withFirebase(connect(null,mapDispatchToProps)(SignedInLinks));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Sign In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport smallCover from '../../images/smallCover.svg';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n    return(\r\n        <nav className = \"nav-wrapper RootNavbar\">\r\n            <img src= { smallCover } alt=\"Cover for Navbar\"/>\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo titleText\" title=\"Museria - Find the real you!\">Museria</Link>\r\n                    {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) =>{\r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications:</span>\r\n                    <ul className=\"notification\">\r\n                        {\r\n                            notifications && notifications.map(notif=>{\r\n                                return(\r\n                                    <li key={notif.id}>\r\n                                        <span className=\"pink-text\">{ notif.notification.user } </span>\r\n                                        <span>{ notif.notification.content }</span>\r\n                                        <div className=\"grey-text notif-date\">\r\n                                            {moment(notif.notification.time.toDate()).fromNow()}\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\nimport summaryBG from '../../images/summaryBG.png';\r\n\r\nconst SongSummary = ({projectItem}) =>{\r\n    // console.log(projectItem);\r\n    return(\r\n        <div className=\"card z-depth-0 song-summary\">\r\n            {/* <img src={summaryBG} alt=\"Summary background\" className=\"summary-bg\"/> */}\r\n            <div className=\"card-content text-darken-3\">\r\n                <span className=\"card-title song-summary-title\">{ projectItem.title }</span>\r\n                <h6 className=\"artists\">{ projectItem.artist }</h6>\r\n                <p>Posted by {projectItem.authorFirstName} {projectItem.authorLastName}</p>\r\n                <p className=\"\">{ moment(projectItem.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongSummary;","import React from 'react';\r\nimport SongSummary from './SongSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SongList = ({project}) =>{\r\n    return(\r\n        <div className=\"songList section\">\r\n            {project && project.map(projectItem =>{\r\n                return(\r\n                    <Link to={'/song/'+projectItem.id}  key={projectItem.id}>\r\n                        <SongSummary projectItem = {projectItem} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport SongList from '../projects/SongList';\r\nimport abstractBG from '../../images/abstractBG.svg';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        // console.log(this.props)\r\n        const { project, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <img src={ abstractBG } className=\"mainBG\" alt=\"Cover for Dashboard\"/>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <SongList project = { project }/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1 notifs\">\r\n                        <Notifications notifications={ notifications }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps=(state)=>{\r\n    console.log(state);\r\n    return{\r\n        project: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStatetoProps),\r\n    firestoreConnect([\r\n        {collection:'notifications', limit: 5},\r\n        {collection:'projects',orderBy: ['createdAt', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport abstractBG from '../../images/abstractBG.svg';\r\n\r\n\r\nconst SongDetail =(props)=>{\r\n    const { project,auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if (project){    \r\n        return(\r\n            <div className=\"container section songDetail\">\r\n                <img src={ abstractBG } className=\"mainBG\" alt=\"Cover for Dashboard\"/>\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <h6 className=\"artists\">{ project.artist }</h6>\r\n                        <p className=\"songInfo\">\r\n                            { project.content }\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{ moment(project.createdAt.toDate()).calendar() }</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center section\">\r\n                <h5>Loading Data...<br/>It'll only take a sec!</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n    const id = ownProps.match.params.id;\r\n    const projectDocs = state.firestore.data.projects;   \r\n    const project = projectDocs ? projectDocs[id] : null;\r\n    return{\r\n        project: project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'projects'}\r\n    ])\r\n)(SongDetail);","const signIN = (credentials,fb)=>{\r\n    return(dispatch,getState)=>{\r\n        fb.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'});\r\n        }).catch((err)=>{\r\n            dispatch({type:'LOGIN_FAIL'});\r\n        })\r\n    }\r\n}\r\n\r\nexport default signIN;","import React, { Component } from 'react'\r\nimport logInCover from '../../images/loginCover.svg';\r\nimport { withFirebase } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport signIN from '../../actions/authActions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state,this.props.firebase);\r\n    }\r\n    \r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <img src={logInCover} className=\"signInFace\" alt=\"Cover for Signin\"/>\r\n                <form onSubmit={this.handleSubmit} className=\"\" id=\"signInForm\">\r\n\r\n                <h4 className=\"grey-text text-darken-3\">Log In</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input id=\"email\" type=\"email\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Log In</button>\r\n                    </div>\r\n\r\n                    \r\n                    {authError ? \r\n                        <div className=\"error container center red-text\">\r\n                            <p>{authError}</p>\r\n                        </div>:\r\n                        null\r\n                    }\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds,fb)=>dispatch(signIN(creds,fb))\r\n    }\r\n}\r\n\r\nexport default withFirebase(connect(mapStateToProps,mapDispatchToProps)(SignIn));\r\n","const signup = (newUser,fb)=>{\r\n    return(dispatch,getState)=>{\r\n        fb.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return fb.firestore().collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.fname,\r\n                lastName:newUser.lname,\r\n                initials:newUser.fname[0]+newUser.lname[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'});\r\n        }).catch(err=>{\r\n            dispatch({type:'SIGNUP_FAIL',err});\r\n        })\r\n    }\r\n}\r\n\r\nexport default signup;","import React, { Component } from 'react'\r\nimport logInCover from '../../images/loginCover.svg'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport signup from '../../actions/authActions3';\r\nimport { withFirebase } from 'react-redux-firebase';\r\n\r\nclass SignUp extends Component {\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        fname:'',\r\n        lname:''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.signUP(this.state,this.props.firebase);\r\n    }\r\n    \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <img src={logInCover} className=\"signInFace\" alt=\"Cover for Signup\"/>\r\n                <form onSubmit={this.handleSubmit} className=\"\" id=\"signInForm\">\r\n\r\n                <h4 className=\"grey-text text-darken-3\">Sign Up</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"fname\">First Name:</label>\r\n                        <input id=\"fname\" type=\"text\" onChange={this.handleChange} required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lname\">Last Name:</label>\r\n                        <input id=\"lname\" type=\"text\" onChange={this.handleChange} required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input id=\"email\" type=\"email\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Sign Up!</button>\r\n                    </div>\r\n                    \r\n                    {authError ? \r\n                        <div className=\"error container center red-text\">\r\n                            <p>{authError}</p>\r\n                        </div>:\r\n                        null\r\n                    }\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        signUP: (newUser,fb)=>dispatch(signup(newUser,fb))\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(connect(mapStateToProps,mapDispatchToProps)(SignUp));\r\n","import React, { Component } from 'react'\r\nimport createBG from '../../images/createBG.svg'\r\nimport {createNewPost} from '../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport { withFirebase } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass CreateSongProject extends Component {\r\n    state={\r\n        title:'',\r\n        artist:'',\r\n        content:''\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state,this.props.firebase);\r\n        this.props.history.push('/');\r\n    }\r\n    \r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <img src={createBG} className=\"signInFace\" alt=\"Cover for Song Project\"/>\r\n                <form onSubmit={this.handleSubmit} className=\"\" id=\"signInForm\">\r\n\r\n                <h4 className=\"grey-text text-darken-3\">New Post</h4>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Song Title:</label>\r\n                        <input id=\"title\" type=\"text\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"artist\">Artist:</label>\r\n                        <input id=\"artist\" type=\"text\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Song Description:</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink z-depth-0\">Create !</button>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        createProject: (project,fb)=>dispatch(createNewPost(project,fb))\r\n    }\r\n}\r\n\r\nexport default withFirebase(connect(mapStateToProps,mapDispatchToProps)(CreateSongProject));\r\n","export const createNewPost = (project,fb) =>{\r\n        //make some async call to db\r\n        return(dispatch,getState)=>{\r\n            const profileDetail = getState().firebase.profile;\r\n            const uidFirebase = getState().firebase.auth.uid;\r\n            fb.firestore().collection('projects').add({\r\n                title:project.title,\r\n                artist:project.artist,\r\n                content:project.content,\r\n                authorFirstName: profileDetail.firstName,\r\n                authorLastName:profileDetail.lastName,\r\n                authorID: uidFirebase,\r\n                createdAt:new Date()\r\n            }).then(()=>{\r\n                dispatch({type:'CREATE_PROJECT', project});\r\n            }).catch((err)=>{\r\n                dispatch({type:'CREATE_PROJECT_FAILED', err});\r\n            })\r\n        }\r\n \r\n}\r\n\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SongDetail from './components/projects/SongDetail';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateSongProject from './components/projects/CreateSongProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component = {Dashboard} />\n          <Route path='/signin' component = {SignIn} />\n          <Route path='/signup' component = {SignUp} />\n          <Route path='/create' component = {CreateSongProject} />\n          <Route path='/song/:id' component = {SongDetail} />\n          \n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducers = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_FAIL':{\r\n            console.log(\"error\");\r\n            return{\r\n                ...state,\r\n                authError:'Login Failed'\r\n            }\r\n        }\r\n        case 'LOGIN_SUCCESS':{\r\n            console.log(\"success\");\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        }\r\n        case 'SIGNOUT_SUCCESS':{\r\n            console.log(\"signout success\");\r\n            return state;\r\n        }\r\n        case 'SIGNUP_SUCCESS':{\r\n            console.log(\"signup success\");\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        }\r\n        case 'SIGNUP_FAIL':{\r\n            console.log(\"signup failed\");\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        }\r\n        default:return state\r\n\r\n    }\r\n}\r\n\r\nexport default authReducers;","const initState = {\r\n    project:[\r\n        {id:1, title:'Ivy', artist:'Frank Ocean', content:'in love with this song'},\r\n        {id:2, title:'Pink + White', artist:'Frank Ocean', content:'in love with this song'},\r\n        {id:3, title:'Tossie Slide', artist:'Drake', content:'its catchy!'},\r\n        {id:4, title:'Smooth Criminal', artist:'MJ', content:'cause the guy IS a GOAT'},\r\n        {id:5, title:'King Kunta', artist:'Kendrick Lamar', content:'its got a vibe to it'},\r\n    ]\r\n}\r\n\r\nconst projectReducers = (state = initState, action) =>{\r\n    switch (action.type){\r\n        case 'CREATE_PROJECT':{\r\n            console.log(\"created project\", action.project);\r\n            return state;\r\n        }\r\n        case 'CREATE_PROJECT_FAILED':{\r\n            console.log(\"create project failed\", action.err);\r\n            return state;\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default projectReducers;","import authReducers from  './authReducers';\r\nimport projectReducers from './projectReducers';\r\nimport { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducers = combineReducers({\r\n    firebase:firebaseReducer,\r\n    firestore:firestoreReducer,\r\n    auth: authReducers,\r\n    project: projectReducers\r\n})\r\n\r\nexport default rootReducers;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCj1AT265XQ2u8-FcuPrZHDB5iSyNSpdE\",\r\n    authDomain: \"museria-1209.firebaseapp.com\",\r\n    databaseURL: \"https://museria-1209.firebaseio.com\",\r\n    projectId: \"museria-1209\",\r\n    storageBucket: \"museria-1209.appspot.com\",\r\n    messagingSenderId: \"864952772992\",\r\n    appId: \"1:864952772992:web:a998fb4d9bd26cd96f7965\",\r\n    measurementId: \"G-62L7WFRV44\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducers from './reducers/rootReducers';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase';\nimport firebase from 'firebase/app';\nimport fbConfig from './config/fbConfig';  //this is the config file in which firebase connection details are present\n                                          // along with firebase.initializeApp() and firebase.firestore() commands\nimport CoffeeLoading from './images/LoadingRe.gif';\n// import OctopusLoading from './images/Loading.gif';\n\n\nconst rrfConfig ={\n  userProfile:'users',\n  useFirestoreForProfile:true, //include if using firestore\n  attachAuthIsReady:true  //include if using firebase auth\n}\n\n// reduxFirestore worked for me and i guess is still there in the current version3\n// NOTE: This is a necessary step, because when you're using firebaseReducer and firestoreReducer in\n// the root reducer then those reducers know which firebase database to connect to as you pass these information\n// as fbConfig, so you're store now knows about youre firebase configuration file\n\nconst store = createStore(rootReducers, \n  compose(\n    applyMiddleware(thunk),\n    reduxFirestore(fbConfig)\n  )\n);\n\n// we pass these props from the <ReactReduxFirebaseProvider> down to all the elements and catch \n// the firebase property using the withFirebase() function (HOC)\n  const rrfProps={\n    firebase,\n    config:rrfConfig,\n    dispatch:store.dispatch,\n    createFirestoreInstance\n  }\n\n  // this function is used as an alternative to the function in v2.*.* so that my DOM renders only when\n  // my firebase has made a connection (ignore this if not using firebase.auth())\n  function AuthIsReady({ children }){\n    const auth = useSelector(state=>state.firebase.auth);\n    if(isLoaded(auth)){\n      return children;\n    }\n    else{\n      return <div className=\"center loading\"><img src= { CoffeeLoading } alt=\"Loading... \" /></div>\n    }\n  }\n\n  // remove <AuthIsReady> tag is not using firebase.auth()\n\nReactDOM.render(\n  <Provider store = { store }>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <React.StrictMode>\n        <AuthIsReady>    \n          <App />\n        </AuthIsReady>\n      </React.StrictMode>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/abstractBG.d03b7fab.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginCover.59fccc72.svg\";"],"sourceRoot":""}